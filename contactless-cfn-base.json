{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Creates framework necessary for SLS for Contact Form",
  "Parameters" : {
    "Project" : {
      "Description" : "Enter Project Name",
      "Type" : "String",
      "Default" : "Contact Serverless Base"
    },
    "DomainName" : {
      "Description" : "Enter Domain Name to Use (must be HostedZone)",
      "Type" : "String",
      "Default" : "mydomain.com"
    },
    "ApiHostName" : {
      "Description" : "Enter Host Name for API",
      "Type" : "String",
      "Default" : "contact"
    },
    "ApiACMArn" : {
      "Description" : "ARN for the API ACM (must be created in us-east-1)",
      "Type" : "String",
      "Default" : ""
    },
    "GitHubLocation" : {
      "Description" : "Clone URL from GitHub for Code Build",
      "Type" : "String",
      "Default" : "https://github.com/mcliff1/contactless.git"
    },
    "OAuthToken" : {
      "Description" : "Token for GitHub repository to include in Code Pipeline",
      "Type" : "String",
      "Default" : ""
    },
    "Branch" : {
      "Description" : "Used to load set of properties and common resource (develop, prod)",
      "Type" : "String",
      "Default" : ""
    }

  },
  "Resources": {
    "SNSTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "TopicName": {"Fn::Sub": "${AWS::StackName}-GeneralTopic" },
        "DisplayName": {"Fn::Sub" : "General Announcments For ${AWS::StackName} network"}
      }
    },
    "ArtifactStoreBucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-ArtifactBucket"]]}},
          { "Key" : "Project", "Value" : {"Ref": "Project"} }
        ]
      }
    },
    "CodeBuildRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [
            {
              "Effect" : "Allow",
              "Principal" : {
                "Service" : [
                  "codebuild.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path" : "/",
        "Policies" : [
          {
            "PolicyName" : "codebuild-service",
            "PolicyDocument" : {
              "Version" : "2012-10-17",
              "Statement" : [
                {
                  "Action" : [
                    "logs:*",
                    "ssm:GetParameter",
                    "cloudformation:DescribeStacks",
                    "cloudformation:ListExports",
                    "cloudformation:ListImports",
                    "cloudformation:ListSTacks",
                    "s3:HeadBucket",
                    "s3:ListAllMyBuckets",
                    "route53:ListHostedZones",
                    "cloudfront:UpdateDistribution"
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "apigateway:*",
                    "lambda:*"
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "s3:*",
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "route53:GetChange",
                  ],
                  "Resource" : "arn:aws:route53:::change/*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "route53:GetChange",
                    "route53:ChangeResourceRecordSets"
                  ],
                  "Resource" : "arn:aws:route53:::hostedzone/*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "iam:GetRole",
                    "iam:CreateRole",
                    "iam:DeleteRole",
                    "iam:PutRolePolicy",
                    "iam:DeleteRolePolicy",
                    "iam:PassRole"
                  ],
                  "Resource" : "arn:aws:iam::*:role/contactless*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "cloudformation:*"
                  ],
                  "Resource" : "arn:aws:cloudformation:*:*:stack/contactless*/*",
                  "Effect" : "Allow"
                }
              ]
            }
          }
        ]
      }
    },

    "CodeBuild": {
      "Type" : "AWS::CodeBuild::Project",
      "DependsOn" : "CodeBuildRole",
      "Properties" : {
        "Name" : { "Ref" : "AWS::StackName" },
        "Description" : "Application Code Build and Deployment",
        "Artifacts" : {
          "Type" : "no_artifacts"
        },
        "Environment" : {
          "Type" : "LINUX_CONTAINER",
          "ComputeType" : "BUILD_GENERAL1_SMALL",
          "Image" : "mcliff/sambuild:1.0.1",
          "EnvironmentVariables" : [
            {
              "Name" : "BUILD_BUCKET",
              "Value" : {"Ref": "ArtifactStoreBucket"}
            },
            {
              "Name" : "SAM_STACK_NAME",
              "Value" : {"Fn::Join": [ "-", [{"Ref": "AWS::StackName"}, "sam"]]}
            }
          ]
        },
        "ServiceRole" : { "Ref" : "CodeBuildRole" },
        "Source" : {
          "Type" : "GITHUB",
          "BuildSpec" : "buildspec.yml",
          "Location" : { "Ref" : "GitHubLocation"},
          "GitCloneDepth" : 1
        },
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-CodeBuild"]]}},
          { "Key" : "Project", "Value" : {"Ref": "Project"} }
        ]
      }
    },

    "CodePipelineRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [
            {
              "Effect" : "Allow",
              "Principal" : {
                "Service" : [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path" : "/",
        "Policies" : [
          {
            "PolicyName" : "codepipeline-service",
            "PolicyDocument" : {
              "Version" : "2012-10-17",
              "Statement" : [
                {
                  "Action" : [
                    "codepipeline:*",
                    "codebuild:*"
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning"
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                },
                {
                  "Action" : [
                    "s3:*",
                    "logs:*"
                  ],
                  "Resource" : "*",
                  "Effect" : "Allow"
                }
              ]
            }
          }
        ]
      }
    },
    "CodePipeline" : {
      "Type" : "AWS::CodePipeline::Pipeline",
      "Properties" : {
        "RoleArn" : {"Fn::GetAtt" : ["CodePipelineRole", "Arn"]},
        "ArtifactStore" : {
          "Type" : "S3",
          "Location" : {"Ref" : "ArtifactStoreBucket"}
        },
        "Stages": [
          {
            "Name" : "Source",
            "Actions" : [
              {
                "Name" : "SourceAction",
                "ActionTypeId" : {
                  "Category" : "Source",
                  "Owner" : "ThirdParty",
                  "Version" : "1",
                  "Provider" : "GitHub"
                },
                "OutputArtifacts" : [
                  { "Name" : "SourceOutput" }
                ],
                "Configuration" : {
                  "Owner" : "mcliff1",
                  "Repo" : "polly",
                  "PollForSourceChanges" : "false",
                  "Branch" : {"Ref" : "Branch"},
                  "OAuthToken" : {"Ref" : "OAuthToken" }
                },
                "RunOrder" : 1
              }
            ]
          },
          {
            "Name" : "Build",
            "Actions" : [
              {
                "Name" : "BuildAction",
                "InputArtifacts" : [
                  {"Name" : "SourceOutput"}
                ],
                "ActionTypeId" : {
                  "Category" : "Build",
                  "Owner" : "AWS",
                  "Version" : "1",
                  "Provider" : "CodeBuild"
                },
                "Configuration" : {
                  "ProjectName" : {"Ref" : "CodeBuild"}
                },
                "OutputArtifacts" : [
                  { "Name" : "BuildOutput" }
                ],
                "RunOrder" : 1
              }
            ]
          }
        ]
      }
    },

    "ssmDomainName": {
      "Type" : "AWS::SSM::Parameter",
      "Properties" : {
        "Name" : { "Fn::Sub" : "/${AWS::StackName}/domainName"},
        "Description" : "Domain Name",
        "Type" : "String",
        "Value" : { "Ref" : "DomainName" }
      }
    },
    "ssmApiHostName": {
      "Type" : "AWS::SSM::Parameter",
      "Properties" : {
        "Name" : { "Fn::Sub" : "/${AWS::StackName}/apiHostName"},
        "Description" : "API Host Name",
        "Type" : "String",
        "Value" : { "Ref" : "ApiHostName" }
      }
    },
    "ssmApiAcmArn": {
      "Type" : "AWS::SSM::Parameter",
      "Properties" : {
        "Name" : { "Fn::Sub" : "/${AWS::StackName}/apiAcmArn"},
        "Description" : "ARN for the ACM (Certificate) for the API",
        "Type" : "String",
        "Value" : { "Ref" : "ApiACMArn" }
      }
    }


  },
  "Outputs": {
    "Project" : {
      "Description" : "The Project Name",
      "Value" : {"Ref": "Project"}
    },
    "SNSTopic" : {
      "Description" : "SNS Topic Created",
      "Value" : {"Ref": "SNSTopic"},
      "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-TopicArn"}}
    },
    "DomainName" : {
      "Description" : "Domain Name to be used",
      "Value" : {"Ref": "SNSTopic"},
      "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-DomainName"}}
    },
    "ApiHostName" : {
      "Description" : "Hostname for the API",
      "Value" : {"Ref": "ApiHostName"},
      "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-ApiHostName"}}
    }


  },

  "Metadata": {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Project Information"},
          "Parameters" : [ "Project" ]
        },
        {
          "Label" : { "default" : "Hostnames and DNS"},
          "Parameters" : [ "DomainName", "WebHostName", "ApiHostName"]
        },
        {
          "Label" : { "default" : "SSL Certificates (pre-created)"},
          "Parameters" : [ "ApiACMArn", "WebACMArn"]
        },
        {
          "Label" : { "default" : "Build Information"},
          "Parameters" : [ "GitHubLocation", "Branch", "OAuthToken" ]
        },
      ],
      "ParameterLabels" : {
        "GitHubLocation": { "default" : "URL in GitHub for the source repository to use" },
        "ApiACMArn": { "default" : "ARN for the SSL Certification (us-east-1 region)" },
        "ApiHostName": { "default" : "Hostname (not include domain) for the API" },
        "WebHostName": { "default" : "Hostname (not include domain) for the Web" }
      }
    }
  },

  "Mappings" : {
    "RegionMap": {
      "ap-northeast-1": {
        "S3hostedzoneID": "Z2M4EHUR26P7ZW",
        "websiteendpoint": "s3-website-ap-northeast-1.amazonaws.com"
      },
      "ap-northeast-2": {
        "S3hostedzoneID": "Z3W03O7B5YMIYP",
        "websiteendpoint": "s3-website-ap-northeast-2.amazonaws.com"
      },
      "ap-south-1": {
        "S3hostedzoneID": "Z11RGJOFQNVJUP",
        "websiteendpoint": "s3-website-ap-south-1.amazonaws.com"
      },
      "ap-southeast-1": {
        "S3hostedzoneID": "Z3O0J2DXBE1FTB",
        "websiteendpoint": "s3-website-ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "S3hostedzoneID": "Z1WCIGYICN2BYD",
        "websiteendpoint": "s3-website-ap-southeast-2.amazonaws.com"
      },
      "eu-central-1": {
        "S3hostedzoneID": "Z21DNDUVLTQW6Q",
        "websiteendpoint": "s3-website-eu-central-1.amazonaws.com"
      },
      "eu-west-1": {
        "S3hostedzoneID": "Z1BKCTXD74EZPE",
        "websiteendpoint": "s3-website-eu-west-1.amazonaws.com"
      },
      "sa-east-1": {
        "S3hostedzoneID": "Z7KQH4QJS55SO",
        "websiteendpoint": "s3-website-sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "S3hostedzoneID": "Z3AQBSTGFYJSTF",
        "websiteendpoint": "s3-website-us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "S3hostedzoneID": "Z2O1EMRO9K5GLX",
        "websiteendpoint": "s3-website-us-east-2.amazonaws.com"
      },
      "us-west-1": {
        "S3hostedzoneID": "Z2F56UZL2M1ACD",
        "websiteendpoint": "s3-website-us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "S3hostedzoneID": "Z3BJ6K6RIION7M",
        "websiteendpoint": "s3-website-us-west-2.amazonaws.com"
      }
    }
  }
}
