# added for aws builds
# requires AWS credentials
# using us-west-2
#   SSM params /foundation/travisci/contactless
#              /foundation/iam/role-cf-deploy
#
#
# vars - https://docs.travis-ci.com/user/environment-variables/#convenience-variables
language: python
python:
  - '3.6'
branches:
  - feature-init
  - release/qa
  - master
install:
  - pip install awscli
  - pip install aws-sam-cli

.setup_role_script: &setup_role
  - echo "============== SETUP ASSUME ROLE =============="
  - aws sts get-caller-identity
  - echo "Assume role $ROLE_ARN"
  - KST=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name "travis-ci-${TRAVIS_COMMIT}" )
  - export AWS_ACCESS_KEY_ID=$(echo $KST| jq -r '.Credentials.AccessKeyId')
  - export AWS_SECRET_ACCESS_KEY=$(echo $KST| jq -r '.Credentials.SecretAccessKey')
  - export AWS_SESSION_TOKEN=$(echo $KST| jq -r '.Credentials.SessionToken')
  - export AWS_SECURITY_TOKEN=${AWS_SESSION_TOKEN}
  - aws sts get-caller-identity

script:
  #- aws sts get-caller-identity | jq '.'
  - *setup_role
  #- set
  - echo "$TRAVIS_COMMIT $TRAVIS_BRANCH"
  #- export AWS_DEFAULT_REGION=us-west-2
  #- aws ssm get-parameter --name /travisci/contactless
  #- BASE_CONFIG=$(aws ssm get-parameter --name /travisci/contactless | jq -r '.Parameter.Value')
  #- echo $BASE_CONFIG
  #- S3_BUILD_BUCKET=$(echo $BASE_CONFIG | jq -r '.build_bucket')
  #- echo "Travis branch is $TRAVIS_BRANCH"
  #- CONFIG=$(aws ssm get-parameter --name /travisci/contactless/${TRAVIS_BRANCH} | jq -r '.Parameter.Value')
  #
  #- aws ssm get-parameter --name /travisci/contactless | jq -r '.Parameter.Value'
  #- CONFIG=$(aws ssm get-parameter --name /foundation/travisci/contactless | jq -r '.Parameter.Value')
  - CFG_PARAM="/contactless/build/${TRAVIS_BRANCH}/config"
  - echo "looking up SSM parameter $CFG_PARAM"
  - CONFIG=$(aws ssm get-parameter --name $CFG_PARAM --query 'Parameter.Value' --output text)
  - echo $CONFIG
  #
  # - echo $CONFIG
  # - STACK_NAME=$(echo $CONFIG | jq -r '.stack_name')
  # - DOMAIN_NAME=$(echo $CONFIG | jq -r '.domain_name')
  # - API_NAME=$(echo $CONFIG | jq -r '.api_name')
  # - CERT_ARN=$(echo $CONFIG | jq -r '.cert_arn')
  #- S3_BUILD_BUCKET=$(echo $CONFIG | jq -r '.build_bucket')
  - S3_BUILD_BUCKET=$(aws ssm get-parameter --name /foundation/s3/buildbucket --query 'Parameter.Value' --output text)
  #- BRANCH_CONFIG=$(echo $CONFIG | jq --arg branch "$TRAVIS_BRANCH" -r '.branches[$branch]')
  #- echo $BRANCH_CONFIG
  - STACK_NAME=$(echo $CONFIG | jq -r '.stack_name')
  - DOMAIN_NAME=$(echo $CONFIG | jq -r '.domain_name')
  - API_NAME=$(echo $CONFIG | jq -r '.api_name')
  - CERT_ARN=$(echo $CONFIG | jq -r '.cert_arn')
  - sam validate
  #- sam --region us-west-2 validate
  - sam package --template-file template.yaml --s3-bucket ${S3_BUILD_BUCKET} --output-template-file interim-template.yaml
  #- sam deploy  --template-file interim-template.yaml --stack-name ${SAM_STACK_NAME} --capabilities CAPABILITY_IAM
  - DEPLOY_ROLE=$(aws ssm get-parameter --name /foundation/iam/role-cf-deploy --query 'Parameter.Value' --output text)
  - sam deploy --parameter-overrides DomainName=${DOMAIN_NAME} CertificateArn=${CERT_ARN} ApiName=${API_NAME} --template-file interim-template.yaml --stack-name ${STACK_NAME} --capabilities CAPABILITY_IAM --role-arn $DEPLOY_ROLE --no-fail-on-empty-changeset

notifications:
  email:
    on_failure: always
